{
  "id": "/providers/Microsoft.Authorization/policyDefinitions/f0287c2a-dd92-489e-b5f7-441d1d7ae036",
  "name": "f0287c2a-dd92-489e-b5f7-441d1d7ae036",
  "properties": {
    "description": "Description Custom Manual - MCSB Baseline item NS-1 for API Management",
    "displayName": "MCSB Baseline item NS-1 for API Management",
    "metadata": {
      "offeringName": "API Management",
      "offeringId": "7e1fb574-eb4a-45d7-8db2-c85445aac53f",
      "mcsb": {
        "mcsbId": "NS-1",
        "features": [
          {
            "featureId": "NSG_SUPPORTED",
            "featureName": "Network Security Group Support",
            "featureDescription": "Service network traffic respects Network Security Groups rule assignment on its subnets.",
            "featureSupport": "True",
            "featureGuidance": "Deploy network security groups (NSG) to your API Management subnets to restrict or monitor traffic by port, protocol, source IP address, or destination IP address. Create NSG rules to restrict your service's open ports (such as preventing management ports from being accessed from untrusted networks). Be aware that by default, NSGs deny all inbound traffic but allow traffic from virtual network and Azure Load Balancers.\r\n\r\nCaution: When configuring an NSG on the API Management subnet, there are a set of ports that are required to be open. If any of these ports are unavailable, API Management may not operate properly and may become inaccessible.",
            "featureReference": "https://docs.microsoft.com/azure/api-management/virtual-network-reference",
            "enabledByDefault": "False",
            "customerActionsDescription": "Establish network segmentation boundaries "
          },
          {
            "featureId": "VNET_INTEGRATION",
            "featureName": "Virtual Network Integration",
            "featureDescription": "Service supports deployment into customer's private Virtual Network (VNet).",
            "featureSupport": "True",
            "featureGuidance": "Deploy Azure API Management inside an Azure Virtual Network (VNET), so it can access backend services within the network. The developer portal and API Management gateway can be configured to be accessible either from the Internet (External) or only within the Vnet (Internal).\r\n\r\n- External: the API Management gateway and developer portal are accessible from the public internet via an external load balancer. The gateway can access resources within the virtual network.\r\n   - [External Virtual Network Configuration](https://docs.microsoft.com/azure/api-management/api-management-using-with-vnet)\r\n- Internal: the API Management gateway and developer portal are accessible only from within the virtual network via an internal load balancer. The gateway can access resources within the virtual network.\r\n   - [Internal Virtual Network Configuraiton](https://docs.microsoft.com/azure/api-management/api-management-using-with-internal-vnet)",
            "featureReference": "https://docs.microsoft.com/azure/api-management/virtual-network-concepts",
            "enabledByDefault": "False",
            "customerActionsDescription": "Establish network segmentation boundaries "
          }
        ],
        "automatedPolicyAvailability": [],
        "frameworkControls": [
          "CIS_Azure_2.0.0_6.7",
          "CIS_Azure_2.0.0_6.4",
          "CIS_Azure_2.0.0_6.3",
          "CIS_Azure_2.0.0_6.2",
          "CIS_Azure_2.0.0_6.1",
          "CIS_Azure_2.0.0_4.3.7",
          "NIST_SP_800-53_R4_SC-7",
          "NIST_SP_800-53_R4_SC-2",
          "NIST_SP_800-53_R4_AC-4",
          "PCI_DSS_v4.0_1.4.5",
          "PCI_DSS_v4.0_1.4.4",
          "PCI_DSS_v4.0_1.4.3",
          "PCI_DSS_v4.0_1.4.2",
          "PCI_DSS_v4.0_1.4.1",
          "PCI_DSS_v4.0_1.3.2",
          "PCI_DSS_v4.0_1.3.1",
          "PCI_DSS_v4.0_1.2.6"
        ]
      },
      "version": "1.0.0",
      "category": "Regulatory Compliance"
    },
    "mode": "All",
    "policyType": "Custom",
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Resources/subscriptions",
              "Microsoft.Resources/subscriptions/resourceGroups"
            ]
          },
          {
            "value": "false",
            "equals": "true"
          }
        ]
      },
      "then": {
        "effect": "Manual",
        "details": {
          "defaultState": "Unknown"
        }
      }
    }
  }
}