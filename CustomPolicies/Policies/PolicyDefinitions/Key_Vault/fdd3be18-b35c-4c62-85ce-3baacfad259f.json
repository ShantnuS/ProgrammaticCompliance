{
  "id": "/providers/Microsoft.Authorization/policyDefinitions/fdd3be18-b35c-4c62-85ce-3baacfad259f",
  "name": "fdd3be18-b35c-4c62-85ce-3baacfad259f",
  "properties": {
    "description": "Description Custom Manual - MCSB Baseline item DP-7 for Key Vault",
    "displayName": "MCSB Baseline item DP-7 for Key Vault",
    "metadata": {
      "offeringName": "Key Vault",
      "offeringId": "8e93a1fd-5378-4ec7-a1e7-135f74745054",
      "mcsb": {
        "mcsbId": "DP-7",
        "features": [
          {
            "featureId": "CERTIFICATE_MANAGEMENT_IN_AZURE_KEY_VAULT",
            "featureName": "Certificate Management in Azure Key Vault",
            "featureDescription": "The service supports Azure Key Vault integration for any customer certificates.",
            "featureSupport": "True",
            "featureGuidance": "Follow the Azure Key Vault best practice to securely manage your certificate lifecycle in the key vault. This includes the key creation/import, rotation, revocation, storage, and purge of the certificate.",
            "featureReference": "https://docs.microsoft.com/azure/key-vault/certificates/create-certificate-scenarios",
            "enabledByDefault": "False",
            "customerActionsDescription": "Use a secure certificate management process"
          }
        ],
        "automatedPolicyAvailability": [
          {
            "policyId": "0a075868-4c26-42ef-914c-5bc007359560",
            "policyName": "[Preview]: Certificates should have the specified maximum validity period",
            "policyDescription": "Manage your organizational compliance requirements by specifying the maximum amount of time that a certificate can be valid within your key vault.",
            "policyCategory": "Key Vault"
          }
        ],
        "frameworkControls": [
          "NIST_SP_800-53_R4_SC-17",
          "NIST_SP_800-53_R4_SC-12",
          "NIST_SP_800-53_R4_IA-5",
          "PCI_DSS_v4.0_4.2.1"
        ]
      },
      "version": "1.0.0",
      "category": "Regulatory Compliance"
    },
    "mode": "All",
    "policyType": "Custom",
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Resources/subscriptions",
              "Microsoft.Resources/subscriptions/resourceGroups"
            ]
          },
          {
            "value": "false",
            "equals": "true"
          }
        ]
      },
      "then": {
        "effect": "Manual",
        "details": {
          "defaultState": "Unknown"
        }
      }
    }
  }
}