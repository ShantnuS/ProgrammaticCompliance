{
  "id": "/providers/Microsoft.Authorization/policyDefinitions/ba526d7a-ee93-4c37-b3d2-09a1a89b14f9",
  "name": "ba526d7a-ee93-4c37-b3d2-09a1a89b14f9",
  "properties": {
    "description": "Description Custom Manual - MCSB Baseline item DP-5 for Virtual Machine Scale Sets",
    "displayName": "MCSB Baseline item DP-5 for Virtual Machine Scale Sets",
    "metadata": {
      "offeringName": "Virtual Machine Scale Sets",
      "offeringId": "d08cdbcb-2f75-4d31-9f0f-6d9d2913f214",
      "mcsb": {
        "mcsbId": "DP-5",
        "features": [
          {
            "featureId": "DATA_AT_REST_ENCRYPTION_USING_CMK",
            "featureName": "Data at Rest Encryption Using CMK",
            "featureDescription": "Data at-rest encryption using customer-managed keys is supported for customer content stored by the service.",
            "featureSupport": "True",
            "featureGuidance": "If required for regulatory compliance, define the use case and service scope where encryption using customer-managed keys are needed. Enable and implement data at rest encryption using customer-managed key for those services.\r\n\r\nVirtual disks on Virtual Machines (VM) are encrypted at rest using either Server-side encryption or Azure disk encryption (ADE). Azure Disk Encryption leverages the DM-Crypt feature of Linux to encrypt managed disks with customer-managed keys within the guest VM. Server-side encryption with customer-managed keys improves on ADE by enabling you to use any OS types and images for your VMs by encrypting data in the Storage service.\r\n\r\nWhen you specify a customer-managed key, that key is used to protect and control access to the key that encrypts your data. Customer-managed keys offer greater flexibility to manage access controls. You must use either Azure Key Vault or Azure Key Vault Managed Hardware Security Module (HSM) to store your customer-managed keys.\r\n\r\nYou can either import [your RSA keys](https://learn.microsoft.com/azure/key-vault/keys/hsm-protected-keys) to your Key Vault or generate new RSA keys in Azure Key Vault. Azure managed disks handles the encryption and decryption in a fully transparent fashion using envelope encryption. It encrypts data using an AES 256 based data encryption key (DEK), which is, in turn, protected using your keys. The Storage service generates data encryption keys and encrypts them with customer-managed keys using RSA encryption. The envelope encryption allows you to rotate (change) your keys periodically as per your compliance policies without impacting your VMs. When you rotate your keys, the Storage service re-encrypts the data encryption keys with the new customer-managed keys.\r\n\r\nManaged Disks and the Key Vault or managed HSM must be in the same Azure region, but they can be in different subscriptions. They must also be in the same Azure Active Directory (Azure AD) tenant, unless you're [encrypting managed disks with cross-tenant customer-managed keys](https://learn.microsoft.com/azure/virtual-machines/disks-cross-tenant-customer-managed-keys?tabs=azure-portal).",
            "featureReference": "https://docs.microsoft.com/azure/virtual-machines/linux/disk-encryption-key-vault",
            "enabledByDefault": "False",
            "customerActionsDescription": "Use customer-managed key option in data at rest encryption when required"
          }
        ],
        "automatedPolicyAvailability": [],
        "frameworkControls": [
          "CIS_Azure_2.0.0_7.7",
          "CIS_Azure_2.0.0_7.4",
          "CIS_Azure_2.0.0_7.3",
          "CIS_Azure_2.0.0_5.1.4",
          "CIS_Azure_2.0.0_4.1.3",
          "CIS_Azure_2.0.0_3.12",
          "NIST_SP_800-53_R4_SC-28",
          "NIST_SP_800-53_R4_SC-12",
          "PCI_DSS_v4.0_3.5.1.2",
          "PCI_DSS_v4.0_3.3.3",
          "PCI_DSS_v4.0_3.3.2"
        ]
      },
      "version": "1.0.0",
      "category": "Regulatory Compliance"
    },
    "mode": "All",
    "policyType": "Custom",
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Resources/subscriptions",
              "Microsoft.Resources/subscriptions/resourceGroups"
            ]
          },
          {
            "value": "false",
            "equals": "true"
          }
        ]
      },
      "then": {
        "effect": "Manual",
        "details": {
          "defaultState": "Unknown"
        }
      }
    }
  }
}