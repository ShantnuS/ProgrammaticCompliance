{
  "id": "/providers/Microsoft.Authorization/policyDefinitions/a1bfb8d2-ac5e-415c-8d7f-d20c0c05fa3e",
  "name": "a1bfb8d2-ac5e-415c-8d7f-d20c0c05fa3e",
  "properties": {
    "description": "Description Custom Manual - MCSB Baseline item DP-7 for Azure Spring Cloud Service",
    "displayName": "MCSB Baseline item DP-7 for Azure Spring Cloud Service",
    "metadata": {
      "offeringName": "Azure Spring Cloud Service",
      "offeringId": "9cebecce-ca19-469d-8537-97180d0ad6c5",
      "mcsb": {
        "mcsbId": "DP-7",
        "features": [
          {
            "featureId": "CERTIFICATE_MANAGEMENT_IN_AZURE_KEY_VAULT",
            "featureName": "Certificate Management in Azure Key Vault",
            "featureDescription": "The service supports Azure Key Vault integration for any customer certificates.",
            "featureSupport": "True",
            "featureGuidance": "When enabling custom domain for apps in Azure Spring Apps, customer can store certificates in Azure Key Vault and import to Azure Spring Apps to enforce Transport Layer Security (TLS) against incoming traffic.\r\nPlease see the reference for detailed instructions.",
            "featureReference": "https://docs.microsoft.com/azure/spring-cloud/tutorial-custom-domain?tabs=Azure-portal",
            "enabledByDefault": "False",
            "customerActionsDescription": "Use a secure certificate management process"
          }
        ],
        "automatedPolicyAvailability": [],
        "frameworkControls": [
          "NIST_SP_800-53_R4_IA-5",
          "NIST_SP_800-53_R4_SC-12",
          "NIST_SP_800-53_R4_SC-17",
          "PCI_DSS_v4.0_4.2.1"
        ]
      },
      "version": "1.0.0",
      "category": "Regulatory Compliance"
    },
    "mode": "All",
    "policyType": "Custom",
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Resources/subscriptions",
              "Microsoft.Resources/subscriptions/resourceGroups"
            ]
          },
          {
            "value": "false",
            "equals": "true"
          }
        ]
      },
      "then": {
        "effect": "Manual",
        "details": {
          "defaultState": "Unknown"
        }
      }
    }
  }
}