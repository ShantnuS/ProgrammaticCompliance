{
  "id": "/providers/Microsoft.Authorization/policyDefinitions/11c3bbec-12e1-4c7a-ba8a-e5b8ccbbbeea",
  "name": "11c3bbec-12e1-4c7a-ba8a-e5b8ccbbbeea",
  "properties": {
    "description": "Description Custom Manual - MCSB Baseline item IM-1 for IoT Central",
    "displayName": "MCSB Baseline item IM-1 for IoT Central",
    "metadata": {
      "offeringName": "IoT Central",
      "offeringId": "c8be96e2-b091-4fc9-8b93-7defdb0eb66f",
      "mcsb": {
        "mcsbId": "IM-1",
        "features": [
          {
            "featureId": "AAD_AUTH_FOR_DATA_PLANE_ACCESS",
            "featureName": "Azure AD Authentication Required for Data Plane Access",
            "featureDescription": "Service supports using Azure AD authentication for data plane access.",
            "featureSupport": "True",
            "featureGuidance": "IoT Central supports two ways for authorizing REST API Calls\r\n1) Azure AD bearer token - A bearer token is associated with an Azure Active Directory user account or service principal. The token grants the caller the same permissions the user or service principal has in the IoT Central application.\r\n2) API token - create a specific API token in the IoT Central application and associate with a role.\r\n\r\nUse a bearer token associated with your user account while you're developing and testing automation and scripts that use the REST API. Use a bearer token that's associated with a service principal for production automation and scripts. Use a bearer token in preference to an API token to reduce the risk of leaks and problems when tokens expire.",
            "featureReference": "https://docs.microsoft.com/azure/iot-central/core/howto-authorize-rest-api",
            "enabledByDefault": "False",
            "customerActionsDescription": "Use centralized identity and authentication system"
          },
          {
            "featureId": "LOCAL_AUTH_METHODS_FOR_DATA_PLANE_ACCESS",
            "featureName": "Local Authentication Methods for Data Plane Access",
            "featureDescription": "Local authentications methods supported for data plane access, such as a local username and password.",
            "featureSupport": "True",
            "featureGuidance": "IoT Central provides local authentication methods for 2 scenarios\r\n1) Device authentication by shared access signature (SAS) token\r\n2) REST API authentication via API tokens\r\n\r\nDevices authenticate with the IoT Central application by using either a shared access signature (SAS) token or an X.509 certificate. X.509 certificates are recommended in production environments.\r\n\r\nTo access an IoT Central application using the REST API, you can create and use an IoT Central API token in addition to using an Azure Active Directory Bearer token. It is currently not possible to block/disable such local authentication but the ability to create/manage API tokens are governed by Role Based Access Control (RBAC) and Organizations.",
            "featureReference": "https://docs.microsoft.com/azure/iot-central/core/overview-iot-central-security#manage-device-access",
            "enabledByDefault": "False",
            "customerActionsDescription": "Use centralized identity and authentication system"
          }
        ],
        "automatedPolicyAvailability": [],
        "frameworkControls": [
          "CIS_Azure_2.0.0_9.5",
          "CIS_Azure_2.0.0_4.5.3",
          "CIS_Azure_2.0.0_4.1.4",
          "NIST_SP_800-53_R4_AC-3",
          "NIST_SP_800-53_R4_AC-2",
          "NIST_SP_800-53_R4_IA-8",
          "NIST_SP_800-53_R4_IA-2",
          "PCI_DSS_v4.0_8.2.1",
          "PCI_DSS_v4.0_7.3.2",
          "PCI_DSS_v4.0_7.3.1"
        ]
      },
      "version": "1.0.0",
      "category": "Regulatory Compliance"
    },
    "mode": "All",
    "policyType": "Custom",
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Resources/subscriptions",
              "Microsoft.Resources/subscriptions/resourceGroups"
            ]
          },
          {
            "value": "false",
            "equals": "true"
          }
        ]
      },
      "then": {
        "effect": "Manual",
        "details": {
          "defaultState": "Unknown"
        }
      }
    }
  }
}